# .github/workflows/docker.yml
name: Build and Deploy to QA

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: bookmark
          POSTGRES_PASSWORD: bookmarkpass
          POSTGRES_DB: bookmark
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      DATABASE_URL: "postgresql+asyncpg://bookmark:bookmarkpass@localhost:5432/bookmark"
      IMAGE_NAME: ghcr.io/l2klbs/bookmark-api

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: 📦 Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: 🛠️ Init test database
        run: |
          source venv/bin/activate
          python scripts/init_db.py

      - name: ✅ Run tests
        run: |
          source venv/bin/activate
          pytest

      - name: 🐳 Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: 🔧 Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔐 Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🔖 Set short SHA
        run: echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: 🚢 Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:qa-${{ env.SHORT_SHA }}

      - name: 🚀 Deploy to QA
        run: |
          echo "Deploying image: ${{ env.IMAGE_NAME }}:qa-${{ env.SHORT_SHA }}"
          # Add deploy script/command here
          # Use ArgoCD to auto-deploy to qa namespace
